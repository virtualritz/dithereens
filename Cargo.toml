[package]
name = "dithereens"
version = "0.6.1"
authors = ["Moritz Moeller <virtualritz@protonmail.com>"]
edition = "2024"
keywords = ["graphics", "dithering", "images"]
categories = ["graphics", "multimedia::images"]
license = "Apache-2.0 OR BSD-3-Clause OR MIT OR Zlib"
description = "Functions & traits for quantizing values with error-diffusion"
exclude = [".github/**/*", "crates/**/*", "examples/**/*"]
readme = "README.md"
documentation = "https://docs.rs/dithereens/"
repository = "https://github.com/virtualritz/dithereens/"

[features]
default = ["rayon", "std"]
## Enables `std`-only features.
std = []
## Pulls in `libm` for faster `round()` implementation.
libm = ["dep:libm"]
## Enables parallel processing via `rayon`.
rayon = ["dep:rayon", "dep:smallvec"]
## Enables support for native `f16` type (requires `nightly`).
nightly_f16 = ["dep:common_traits_f16"]
## Enables true blue noise dithering using precomputed 256×256×4 table (adds ~5MB to binary size).
blue-noise = []
## Enables serialization/deserialization via serde.
serde = ["dep:serde"]

[dependencies]
common_traits = { version = "0.12", default-features = false }
common_traits_f16 = { git = "https://github.com/virtualritz/common_traits.git", package = "common_traits", default-features = false, features = ["nightly_f16"], optional = true }
enum_dispatch = "0.3"
libm = { version = "0.2", optional = true }
rayon = { version = "1", optional = true }
serde = { version = "1", default-features = false, features = ["derive"], optional = true }
smallvec = { version = "1", optional = true }

[dev-dependencies]
criterion = { version = "0.6", features = ["html_reports"] }
exr = "1.73"
image = "0.25"
num_cpus = "1"

[[bench]]
name = "dithering"
harness = false

[[bench]]
name = "comparison"
harness = false

[[bench]]
name = "simple"
harness = false

[[bench]]
name = "rayon_comparison"
harness = false

[[bench]]
name = "multichannel"
harness = false
